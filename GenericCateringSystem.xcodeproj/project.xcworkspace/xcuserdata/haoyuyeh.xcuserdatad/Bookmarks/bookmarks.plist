<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>91</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>90</string>
					<key>Timestamp</key>
					<string>736755302.759039</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Log In/ConfigVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                let storyboard = UIStoryboard(name: "Customer", bundle: nil)
</string>
				<key>leading</key>
				<string>                show(destVC, sender: sender)
            default:
</string>
				<key>trailing</key>
				<string>                
                let destVC = storyboard.instantiateViewController(withIdentifier: "CustomerTabC") as! UITabBarController
                destVC.modalPresentationStyle = UIModalPresentationStyle.fullScreen
</string>
			</dict>
			<key>title</key>
			<string>review after finish CustomerVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>62</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>61</string>
					<key>Timestamp</key>
					<string>736841324.744583</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatInVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            let outcome = viewModel.hasOngoingOrder(of: cell.uuid)
</string>
				<key>leading</key>
				<string>        if cell.isOcuppied {
            // should check order state before segue to table order details VC
</string>
				<key>trailing</key>
				<string>            if outcome.result {
                let storyboard = UIStoryboard(name: "EatIn", bundle: nil)
                let destVC = storyboard.instantiateViewController(withIdentifier: "TableOrderDetailVC") as! TableOrderDetailVC
</string>
			</dict>
			<key>title</key>
			<string>segue to tableOrderDetailsVC after complet customer VC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>78</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>77</string>
					<key>Timestamp</key>
					<string>736841324.74461</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatInVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            delegate?.tableOccupied()
</string>
				<key>leading</key>
				<string>            }
        }else {
</string>
				<key>trailing</key>
				<string>//            delegate?.occupied(at: cell.uuid!)
        }
    }
</string>
			</dict>
			<key>title</key>
			<string>possibly apply to all cells </string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>51</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>50</string>
					<key>Timestamp</key>
					<string>736841324.744602</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatInVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        delegate?.tableReleased()
</string>
				<key>leading</key>
				<string>extension EatInVC: CheckOutDelegate {
    func orderCompleted(at table: UUID) {
</string>
				<key>trailing</key>
				<string>//        delegate?.released(at: table)
    }
}
</string>
			</dict>
			<key>title</key>
			<string>check</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatInVC.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>title</key>
			<string>check work flow after customerVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/TableOrderDetailVC.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>title</key>
			<string>check work flow after customerVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
