<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>88</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>87</string>
					<key>Timestamp</key>
					<string>737797992.743944</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Log In/ConfigVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>                let storyboard = UIStoryboard(name: "Customer", bundle: nil)
</string>
				<key>leading</key>
				<string>                
            case Roll.customer.rawValue:
</string>
				<key>trailing</key>
				<string>                let tabC = storyboard.instantiateViewController(withIdentifier: "CustomerTabC") as! UITabBarController
                
                tabC.modalPresentationStyle = UIModalPresentationStyle.fullScreen
</string>
			</dict>
			<key>title</key>
			<string>review after finish CustomerVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>78</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>77</string>
					<key>Timestamp</key>
					<string>736841324.74461</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatInVC.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            delegate?.tableOccupied()
</string>
				<key>leading</key>
				<string>            }
        }else {
</string>
				<key>trailing</key>
				<string>//            delegate?.occupied(at: cell.uuid!)
        }
    }
</string>
			</dict>
			<key>title</key>
			<string>possibly apply to all cells </string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/TableOrderDetailVC.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>title</key>
			<string>check work flow after customerVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Customer Device/OrderDetailVC.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>title</key>
			<string>use two swipe action to implement the function of serving food(how many portions are served)</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/View/Casher Device/EatIn/TableOrderDetailVC.swift</string>
					</dict>
				</dict>
				<key>type</key>
				<string>DVTDocumentLocation</string>
			</dict>
			<key>title</key>
			<string>should add a new btn to delete order in case customer want to leave </string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>24</string>
					<key>StartingColumnNumber</key>
					<string>41</string>
					<key>StartingLineNumber</key>
					<string>23</string>
					<key>Timestamp</key>
					<string>737800095.4902411</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>GenericCateringSystem/ViewModel/Casher Device/EatIn/EatInVCViewModel.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>
</string>
				<key>leading</key>
				<string>        let p1 = NSPredicate(format: "number == %@ AND currentState == %d", device[0].number ?? "nil", OrderState.eating.rawValue)
        let order = Helper.shared.fetchOrder(predicate: p1)
        logger.debug("device: \(device)")</string>
				<key>trailing</key>
				<string>        logger.debug("order: \(order)")
        if order.count &gt; 0 {
            return (true, order[0])
</string>
			</dict>
			<key>title</key>
			<string>no order fetched</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
